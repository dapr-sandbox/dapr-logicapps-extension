# ------------------------------------------------------------
# Copyright (c) Microsoft Corporation.
# Licensed under the MIT License.
# ------------------------------------------------------------

name: build

on:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*
  pull_request:
    branches:
      - master
      - release-*

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
      - name: Install dependencies
        run: dotnet restore
      - name: Test
        run: dotnet test --no-restore --verbosity normal
      - name: Build
        run: dotnet build --configuration Release --no-restore -o out
      - name: Upload binaries
        uses: actions/upload-artifact@v2
        with: 
          name: dapr-workflow
          path: out/*
  publish:
    name: Publish docker image
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      WORKFLOWS_REGISTRY: ${{ secrets.DOCKER_DAPRIO_REGISTRY }}
      WORKFLOWS_IMAGE: workflows

    steps:
      - uses: actions/checkout@v2
      - name: set verision to edge
        if: startswith(github.ref, 'refs/tags/v') == false
        run: |
          echo "##[set-env name=REL_VERSION;]edge"
      - name: extract version from tags
        if: startswith(github.ref, 'refs/tags/v')
        run: |
          VER_TAG_PREFIX="refs/tags/v"
          PARSED_VER=${GITHUB_REF/#$VER_TAG_PREFIX}
          echo Parsed version: $PARSED_VER
          echo "##[set-env name=REL_VERSION;]$PARSED_VER"
      - name: docker login
        run: |
          docker login -u ${{ secrets.DOCKER_REGISTRY_ID }} -p ${{ secrets.DOCKER_REGISTRY_PASS }}
      - name: Build docker image
        run: |
          docker build -t ${{ env.WORKFLOWS_REGISTRY }}/${{ env.WORKFLOWS_IMAGE }}:$REL_VERSION .
      - name: Push dockerhub
        run: |
          docker push ${{ env.WORKFLOWS_REGISTRY }}/${{ env.WORKFLOWS_IMAGE }}:$REL_VERSION
      - uses: actions/download-artifact@v2
        if: startswith(github.ref, 'refs/tags/v')
        with:
          name: dapr-workflow
          path: out/
      - name: archieve binaries
        if: startswith(github.ref, 'refs/tags/v')
        run: |
          cd out && zip ../dapr_workflow_${REL_VERSION}.zip *
      - name: Create Release
        if: startswith(github.ref, 'refs/tags/v')
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DAPR_BOT_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Dapr Workflow v${{ env.REL_VERSION }}
          draft: false
          prerelease: true
      - name: Upload Release Asset
        if: startswith(github.ref, 'refs/tags/v')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.DAPR_BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dapr_workflow_${{ env.REL_VERSION }}.zip
          asset_name: dapr_workflow_${{ env.REL_VERSION }}.zip
          asset_content_type: application/zip
